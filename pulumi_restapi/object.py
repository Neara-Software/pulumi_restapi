# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ObjectArgs', 'Object']

@pulumi.input_type
class ObjectArgs:
    def __init__(__self__, *,
                 data: pulumi.Input[builtins.str],
                 path: pulumi.Input[builtins.str],
                 create_method: Optional[pulumi.Input[builtins.str]] = None,
                 create_path: Optional[pulumi.Input[builtins.str]] = None,
                 debug: Optional[pulumi.Input[builtins.bool]] = None,
                 destroy_data: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_method: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_path: Optional[pulumi.Input[builtins.str]] = None,
                 force_news: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 id_attribute: Optional[pulumi.Input[builtins.str]] = None,
                 ignore_all_server_changes: Optional[pulumi.Input[builtins.bool]] = None,
                 ignore_changes_tos: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 object_id: Optional[pulumi.Input[builtins.str]] = None,
                 query_string: Optional[pulumi.Input[builtins.str]] = None,
                 read_data: Optional[pulumi.Input[builtins.str]] = None,
                 read_method: Optional[pulumi.Input[builtins.str]] = None,
                 read_path: Optional[pulumi.Input[builtins.str]] = None,
                 read_search: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 restapi_object_id: Optional[pulumi.Input[builtins.str]] = None,
                 update_data: Optional[pulumi.Input[builtins.str]] = None,
                 update_method: Optional[pulumi.Input[builtins.str]] = None,
                 update_path: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a Object resource.
        :param pulumi.Input[builtins.str] data: Valid JSON object that this provider will manage with the API server.
        :param pulumi.Input[builtins.str] path: The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        :param pulumi.Input[builtins.str] create_method: Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
               provider config documentation)
        :param pulumi.Input[builtins.bool] debug: Whether to emit verbose debug output while working with the API object on the server.
        :param pulumi.Input[builtins.str] destroy_data: Valid JSON object to pass during to destroy requests.
        :param pulumi.Input[builtins.str] destroy_method: Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
               provider config documentation)
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] force_news: Any changes to these values will result in recreating the resource instead of updating.
        :param pulumi.Input[builtins.str] id_attribute: Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
               provider config documentation)
        :param pulumi.Input[builtins.str] object_id: Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
               manually. This is used in conjunction with the `*_path` attributes.
        :param pulumi.Input[builtins.str] query_string: Query string to be included in the path
        :param pulumi.Input[builtins.str] read_data: Valid JSON object to pass during read requests.
        :param pulumi.Input[builtins.str] read_method: Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
               config documentation)
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] read_search: Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
               `query_string` (see datasource config documentation)
        :param pulumi.Input[builtins.str] update_data: Valid JSON object to pass during to update requests.
        :param pulumi.Input[builtins.str] update_method: Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
               provider config documentation)
        """
        pulumi.set(__self__, "data", data)
        pulumi.set(__self__, "path", path)
        if create_method is not None:
            pulumi.set(__self__, "create_method", create_method)
        if create_path is not None:
            pulumi.set(__self__, "create_path", create_path)
        if debug is not None:
            pulumi.set(__self__, "debug", debug)
        if destroy_data is not None:
            pulumi.set(__self__, "destroy_data", destroy_data)
        if destroy_method is not None:
            pulumi.set(__self__, "destroy_method", destroy_method)
        if destroy_path is not None:
            pulumi.set(__self__, "destroy_path", destroy_path)
        if force_news is not None:
            pulumi.set(__self__, "force_news", force_news)
        if id_attribute is not None:
            pulumi.set(__self__, "id_attribute", id_attribute)
        if ignore_all_server_changes is not None:
            pulumi.set(__self__, "ignore_all_server_changes", ignore_all_server_changes)
        if ignore_changes_tos is not None:
            pulumi.set(__self__, "ignore_changes_tos", ignore_changes_tos)
        if object_id is not None:
            pulumi.set(__self__, "object_id", object_id)
        if query_string is not None:
            pulumi.set(__self__, "query_string", query_string)
        if read_data is not None:
            pulumi.set(__self__, "read_data", read_data)
        if read_method is not None:
            pulumi.set(__self__, "read_method", read_method)
        if read_path is not None:
            pulumi.set(__self__, "read_path", read_path)
        if read_search is not None:
            pulumi.set(__self__, "read_search", read_search)
        if restapi_object_id is not None:
            pulumi.set(__self__, "restapi_object_id", restapi_object_id)
        if update_data is not None:
            pulumi.set(__self__, "update_data", update_data)
        if update_method is not None:
            pulumi.set(__self__, "update_method", update_method)
        if update_path is not None:
            pulumi.set(__self__, "update_path", update_path)

    @property
    @pulumi.getter
    def data(self) -> pulumi.Input[builtins.str]:
        """
        Valid JSON object that this provider will manage with the API server.
        """
        return pulumi.get(self, "data")

    @data.setter
    def data(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "data", value)

    @property
    @pulumi.getter
    def path(self) -> pulumi.Input[builtins.str]:
        """
        The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "path", value)

    @property
    @pulumi.getter(name="createMethod")
    def create_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
        provider config documentation)
        """
        return pulumi.get(self, "create_method")

    @create_method.setter
    def create_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "create_method", value)

    @property
    @pulumi.getter(name="createPath")
    def create_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "create_path")

    @create_path.setter
    def create_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "create_path", value)

    @property
    @pulumi.getter
    def debug(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Whether to emit verbose debug output while working with the API object on the server.
        """
        return pulumi.get(self, "debug")

    @debug.setter
    def debug(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "debug", value)

    @property
    @pulumi.getter(name="destroyData")
    def destroy_data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object to pass during to destroy requests.
        """
        return pulumi.get(self, "destroy_data")

    @destroy_data.setter
    def destroy_data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "destroy_data", value)

    @property
    @pulumi.getter(name="destroyMethod")
    def destroy_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
        provider config documentation)
        """
        return pulumi.get(self, "destroy_method")

    @destroy_method.setter
    def destroy_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "destroy_method", value)

    @property
    @pulumi.getter(name="destroyPath")
    def destroy_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "destroy_path")

    @destroy_path.setter
    def destroy_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "destroy_path", value)

    @property
    @pulumi.getter(name="forceNews")
    def force_news(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        Any changes to these values will result in recreating the resource instead of updating.
        """
        return pulumi.get(self, "force_news")

    @force_news.setter
    def force_news(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "force_news", value)

    @property
    @pulumi.getter(name="idAttribute")
    def id_attribute(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
        provider config documentation)
        """
        return pulumi.get(self, "id_attribute")

    @id_attribute.setter
    def id_attribute(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "id_attribute", value)

    @property
    @pulumi.getter(name="ignoreAllServerChanges")
    def ignore_all_server_changes(self) -> Optional[pulumi.Input[builtins.bool]]:
        return pulumi.get(self, "ignore_all_server_changes")

    @ignore_all_server_changes.setter
    def ignore_all_server_changes(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ignore_all_server_changes", value)

    @property
    @pulumi.getter(name="ignoreChangesTos")
    def ignore_changes_tos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        return pulumi.get(self, "ignore_changes_tos")

    @ignore_changes_tos.setter
    def ignore_changes_tos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "ignore_changes_tos", value)

    @property
    @pulumi.getter(name="objectId")
    def object_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
        manually. This is used in conjunction with the `*_path` attributes.
        """
        return pulumi.get(self, "object_id")

    @object_id.setter
    def object_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "object_id", value)

    @property
    @pulumi.getter(name="queryString")
    def query_string(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Query string to be included in the path
        """
        return pulumi.get(self, "query_string")

    @query_string.setter
    def query_string(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "query_string", value)

    @property
    @pulumi.getter(name="readData")
    def read_data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object to pass during read requests.
        """
        return pulumi.get(self, "read_data")

    @read_data.setter
    def read_data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "read_data", value)

    @property
    @pulumi.getter(name="readMethod")
    def read_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
        config documentation)
        """
        return pulumi.get(self, "read_method")

    @read_method.setter
    def read_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "read_method", value)

    @property
    @pulumi.getter(name="readPath")
    def read_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "read_path")

    @read_path.setter
    def read_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "read_path", value)

    @property
    @pulumi.getter(name="readSearch")
    def read_search(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]:
        """
        Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
        `query_string` (see datasource config documentation)
        """
        return pulumi.get(self, "read_search")

    @read_search.setter
    def read_search(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "read_search", value)

    @property
    @pulumi.getter(name="restapiObjectId")
    def restapi_object_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "restapi_object_id")

    @restapi_object_id.setter
    def restapi_object_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "restapi_object_id", value)

    @property
    @pulumi.getter(name="updateData")
    def update_data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object to pass during to update requests.
        """
        return pulumi.get(self, "update_data")

    @update_data.setter
    def update_data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_data", value)

    @property
    @pulumi.getter(name="updateMethod")
    def update_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
        provider config documentation)
        """
        return pulumi.get(self, "update_method")

    @update_method.setter
    def update_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_method", value)

    @property
    @pulumi.getter(name="updatePath")
    def update_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "update_path")

    @update_path.setter
    def update_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_path", value)


@pulumi.input_type
class _ObjectState:
    def __init__(__self__, *,
                 api_data: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 api_response: Optional[pulumi.Input[builtins.str]] = None,
                 create_method: Optional[pulumi.Input[builtins.str]] = None,
                 create_path: Optional[pulumi.Input[builtins.str]] = None,
                 create_response: Optional[pulumi.Input[builtins.str]] = None,
                 data: Optional[pulumi.Input[builtins.str]] = None,
                 debug: Optional[pulumi.Input[builtins.bool]] = None,
                 destroy_data: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_method: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_path: Optional[pulumi.Input[builtins.str]] = None,
                 force_news: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 id_attribute: Optional[pulumi.Input[builtins.str]] = None,
                 ignore_all_server_changes: Optional[pulumi.Input[builtins.bool]] = None,
                 ignore_changes_tos: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 object_id: Optional[pulumi.Input[builtins.str]] = None,
                 path: Optional[pulumi.Input[builtins.str]] = None,
                 query_string: Optional[pulumi.Input[builtins.str]] = None,
                 read_data: Optional[pulumi.Input[builtins.str]] = None,
                 read_method: Optional[pulumi.Input[builtins.str]] = None,
                 read_path: Optional[pulumi.Input[builtins.str]] = None,
                 read_search: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 restapi_object_id: Optional[pulumi.Input[builtins.str]] = None,
                 update_data: Optional[pulumi.Input[builtins.str]] = None,
                 update_method: Optional[pulumi.Input[builtins.str]] = None,
                 update_path: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering Object resources.
        :param pulumi.Input[builtins.str] api_response: The raw body of the HTTP response from the last read of the object.
        :param pulumi.Input[builtins.str] create_method: Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
               provider config documentation)
        :param pulumi.Input[builtins.str] create_response: The raw body of the HTTP response returned when creating the object.
        :param pulumi.Input[builtins.str] data: Valid JSON object that this provider will manage with the API server.
        :param pulumi.Input[builtins.bool] debug: Whether to emit verbose debug output while working with the API object on the server.
        :param pulumi.Input[builtins.str] destroy_data: Valid JSON object to pass during to destroy requests.
        :param pulumi.Input[builtins.str] destroy_method: Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
               provider config documentation)
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] force_news: Any changes to these values will result in recreating the resource instead of updating.
        :param pulumi.Input[builtins.str] id_attribute: Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
               provider config documentation)
        :param pulumi.Input[builtins.str] object_id: Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
               manually. This is used in conjunction with the `*_path` attributes.
        :param pulumi.Input[builtins.str] path: The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        :param pulumi.Input[builtins.str] query_string: Query string to be included in the path
        :param pulumi.Input[builtins.str] read_data: Valid JSON object to pass during read requests.
        :param pulumi.Input[builtins.str] read_method: Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
               config documentation)
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] read_search: Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
               `query_string` (see datasource config documentation)
        :param pulumi.Input[builtins.str] update_data: Valid JSON object to pass during to update requests.
        :param pulumi.Input[builtins.str] update_method: Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
               provider config documentation)
        """
        if api_data is not None:
            pulumi.set(__self__, "api_data", api_data)
        if api_response is not None:
            pulumi.set(__self__, "api_response", api_response)
        if create_method is not None:
            pulumi.set(__self__, "create_method", create_method)
        if create_path is not None:
            pulumi.set(__self__, "create_path", create_path)
        if create_response is not None:
            pulumi.set(__self__, "create_response", create_response)
        if data is not None:
            pulumi.set(__self__, "data", data)
        if debug is not None:
            pulumi.set(__self__, "debug", debug)
        if destroy_data is not None:
            pulumi.set(__self__, "destroy_data", destroy_data)
        if destroy_method is not None:
            pulumi.set(__self__, "destroy_method", destroy_method)
        if destroy_path is not None:
            pulumi.set(__self__, "destroy_path", destroy_path)
        if force_news is not None:
            pulumi.set(__self__, "force_news", force_news)
        if id_attribute is not None:
            pulumi.set(__self__, "id_attribute", id_attribute)
        if ignore_all_server_changes is not None:
            pulumi.set(__self__, "ignore_all_server_changes", ignore_all_server_changes)
        if ignore_changes_tos is not None:
            pulumi.set(__self__, "ignore_changes_tos", ignore_changes_tos)
        if object_id is not None:
            pulumi.set(__self__, "object_id", object_id)
        if path is not None:
            pulumi.set(__self__, "path", path)
        if query_string is not None:
            pulumi.set(__self__, "query_string", query_string)
        if read_data is not None:
            pulumi.set(__self__, "read_data", read_data)
        if read_method is not None:
            pulumi.set(__self__, "read_method", read_method)
        if read_path is not None:
            pulumi.set(__self__, "read_path", read_path)
        if read_search is not None:
            pulumi.set(__self__, "read_search", read_search)
        if restapi_object_id is not None:
            pulumi.set(__self__, "restapi_object_id", restapi_object_id)
        if update_data is not None:
            pulumi.set(__self__, "update_data", update_data)
        if update_method is not None:
            pulumi.set(__self__, "update_method", update_method)
        if update_path is not None:
            pulumi.set(__self__, "update_path", update_path)

    @property
    @pulumi.getter(name="apiData")
    def api_data(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]:
        return pulumi.get(self, "api_data")

    @api_data.setter
    def api_data(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "api_data", value)

    @property
    @pulumi.getter(name="apiResponse")
    def api_response(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The raw body of the HTTP response from the last read of the object.
        """
        return pulumi.get(self, "api_response")

    @api_response.setter
    def api_response(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "api_response", value)

    @property
    @pulumi.getter(name="createMethod")
    def create_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
        provider config documentation)
        """
        return pulumi.get(self, "create_method")

    @create_method.setter
    def create_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "create_method", value)

    @property
    @pulumi.getter(name="createPath")
    def create_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "create_path")

    @create_path.setter
    def create_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "create_path", value)

    @property
    @pulumi.getter(name="createResponse")
    def create_response(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The raw body of the HTTP response returned when creating the object.
        """
        return pulumi.get(self, "create_response")

    @create_response.setter
    def create_response(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "create_response", value)

    @property
    @pulumi.getter
    def data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object that this provider will manage with the API server.
        """
        return pulumi.get(self, "data")

    @data.setter
    def data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "data", value)

    @property
    @pulumi.getter
    def debug(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        Whether to emit verbose debug output while working with the API object on the server.
        """
        return pulumi.get(self, "debug")

    @debug.setter
    def debug(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "debug", value)

    @property
    @pulumi.getter(name="destroyData")
    def destroy_data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object to pass during to destroy requests.
        """
        return pulumi.get(self, "destroy_data")

    @destroy_data.setter
    def destroy_data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "destroy_data", value)

    @property
    @pulumi.getter(name="destroyMethod")
    def destroy_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
        provider config documentation)
        """
        return pulumi.get(self, "destroy_method")

    @destroy_method.setter
    def destroy_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "destroy_method", value)

    @property
    @pulumi.getter(name="destroyPath")
    def destroy_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "destroy_path")

    @destroy_path.setter
    def destroy_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "destroy_path", value)

    @property
    @pulumi.getter(name="forceNews")
    def force_news(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        Any changes to these values will result in recreating the resource instead of updating.
        """
        return pulumi.get(self, "force_news")

    @force_news.setter
    def force_news(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "force_news", value)

    @property
    @pulumi.getter(name="idAttribute")
    def id_attribute(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
        provider config documentation)
        """
        return pulumi.get(self, "id_attribute")

    @id_attribute.setter
    def id_attribute(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "id_attribute", value)

    @property
    @pulumi.getter(name="ignoreAllServerChanges")
    def ignore_all_server_changes(self) -> Optional[pulumi.Input[builtins.bool]]:
        return pulumi.get(self, "ignore_all_server_changes")

    @ignore_all_server_changes.setter
    def ignore_all_server_changes(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "ignore_all_server_changes", value)

    @property
    @pulumi.getter(name="ignoreChangesTos")
    def ignore_changes_tos(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        return pulumi.get(self, "ignore_changes_tos")

    @ignore_changes_tos.setter
    def ignore_changes_tos(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "ignore_changes_tos", value)

    @property
    @pulumi.getter(name="objectId")
    def object_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
        manually. This is used in conjunction with the `*_path` attributes.
        """
        return pulumi.get(self, "object_id")

    @object_id.setter
    def object_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "object_id", value)

    @property
    @pulumi.getter
    def path(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        """
        return pulumi.get(self, "path")

    @path.setter
    def path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "path", value)

    @property
    @pulumi.getter(name="queryString")
    def query_string(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Query string to be included in the path
        """
        return pulumi.get(self, "query_string")

    @query_string.setter
    def query_string(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "query_string", value)

    @property
    @pulumi.getter(name="readData")
    def read_data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object to pass during read requests.
        """
        return pulumi.get(self, "read_data")

    @read_data.setter
    def read_data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "read_data", value)

    @property
    @pulumi.getter(name="readMethod")
    def read_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
        config documentation)
        """
        return pulumi.get(self, "read_method")

    @read_method.setter
    def read_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "read_method", value)

    @property
    @pulumi.getter(name="readPath")
    def read_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "read_path")

    @read_path.setter
    def read_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "read_path", value)

    @property
    @pulumi.getter(name="readSearch")
    def read_search(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]:
        """
        Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
        `query_string` (see datasource config documentation)
        """
        return pulumi.get(self, "read_search")

    @read_search.setter
    def read_search(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "read_search", value)

    @property
    @pulumi.getter(name="restapiObjectId")
    def restapi_object_id(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "restapi_object_id")

    @restapi_object_id.setter
    def restapi_object_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "restapi_object_id", value)

    @property
    @pulumi.getter(name="updateData")
    def update_data(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Valid JSON object to pass during to update requests.
        """
        return pulumi.get(self, "update_data")

    @update_data.setter
    def update_data(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_data", value)

    @property
    @pulumi.getter(name="updateMethod")
    def update_method(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
        provider config documentation)
        """
        return pulumi.get(self, "update_method")

    @update_method.setter
    def update_method(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_method", value)

    @property
    @pulumi.getter(name="updatePath")
    def update_path(self) -> Optional[pulumi.Input[builtins.str]]:
        return pulumi.get(self, "update_path")

    @update_path.setter
    def update_path(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_path", value)


class Object(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 create_method: Optional[pulumi.Input[builtins.str]] = None,
                 create_path: Optional[pulumi.Input[builtins.str]] = None,
                 data: Optional[pulumi.Input[builtins.str]] = None,
                 debug: Optional[pulumi.Input[builtins.bool]] = None,
                 destroy_data: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_method: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_path: Optional[pulumi.Input[builtins.str]] = None,
                 force_news: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 id_attribute: Optional[pulumi.Input[builtins.str]] = None,
                 ignore_all_server_changes: Optional[pulumi.Input[builtins.bool]] = None,
                 ignore_changes_tos: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 object_id: Optional[pulumi.Input[builtins.str]] = None,
                 path: Optional[pulumi.Input[builtins.str]] = None,
                 query_string: Optional[pulumi.Input[builtins.str]] = None,
                 read_data: Optional[pulumi.Input[builtins.str]] = None,
                 read_method: Optional[pulumi.Input[builtins.str]] = None,
                 read_path: Optional[pulumi.Input[builtins.str]] = None,
                 read_search: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 restapi_object_id: Optional[pulumi.Input[builtins.str]] = None,
                 update_data: Optional[pulumi.Input[builtins.str]] = None,
                 update_method: Optional[pulumi.Input[builtins.str]] = None,
                 update_path: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        Create a Object resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] create_method: Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
               provider config documentation)
        :param pulumi.Input[builtins.str] data: Valid JSON object that this provider will manage with the API server.
        :param pulumi.Input[builtins.bool] debug: Whether to emit verbose debug output while working with the API object on the server.
        :param pulumi.Input[builtins.str] destroy_data: Valid JSON object to pass during to destroy requests.
        :param pulumi.Input[builtins.str] destroy_method: Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
               provider config documentation)
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] force_news: Any changes to these values will result in recreating the resource instead of updating.
        :param pulumi.Input[builtins.str] id_attribute: Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
               provider config documentation)
        :param pulumi.Input[builtins.str] object_id: Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
               manually. This is used in conjunction with the `*_path` attributes.
        :param pulumi.Input[builtins.str] path: The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        :param pulumi.Input[builtins.str] query_string: Query string to be included in the path
        :param pulumi.Input[builtins.str] read_data: Valid JSON object to pass during read requests.
        :param pulumi.Input[builtins.str] read_method: Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
               config documentation)
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] read_search: Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
               `query_string` (see datasource config documentation)
        :param pulumi.Input[builtins.str] update_data: Valid JSON object to pass during to update requests.
        :param pulumi.Input[builtins.str] update_method: Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
               provider config documentation)
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ObjectArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a Object resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ObjectArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ObjectArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 create_method: Optional[pulumi.Input[builtins.str]] = None,
                 create_path: Optional[pulumi.Input[builtins.str]] = None,
                 data: Optional[pulumi.Input[builtins.str]] = None,
                 debug: Optional[pulumi.Input[builtins.bool]] = None,
                 destroy_data: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_method: Optional[pulumi.Input[builtins.str]] = None,
                 destroy_path: Optional[pulumi.Input[builtins.str]] = None,
                 force_news: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 id_attribute: Optional[pulumi.Input[builtins.str]] = None,
                 ignore_all_server_changes: Optional[pulumi.Input[builtins.bool]] = None,
                 ignore_changes_tos: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 object_id: Optional[pulumi.Input[builtins.str]] = None,
                 path: Optional[pulumi.Input[builtins.str]] = None,
                 query_string: Optional[pulumi.Input[builtins.str]] = None,
                 read_data: Optional[pulumi.Input[builtins.str]] = None,
                 read_method: Optional[pulumi.Input[builtins.str]] = None,
                 read_path: Optional[pulumi.Input[builtins.str]] = None,
                 read_search: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 restapi_object_id: Optional[pulumi.Input[builtins.str]] = None,
                 update_data: Optional[pulumi.Input[builtins.str]] = None,
                 update_method: Optional[pulumi.Input[builtins.str]] = None,
                 update_path: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ObjectArgs.__new__(ObjectArgs)

            __props__.__dict__["create_method"] = create_method
            __props__.__dict__["create_path"] = create_path
            if data is None and not opts.urn:
                raise TypeError("Missing required property 'data'")
            __props__.__dict__["data"] = data
            __props__.__dict__["debug"] = debug
            __props__.__dict__["destroy_data"] = destroy_data
            __props__.__dict__["destroy_method"] = destroy_method
            __props__.__dict__["destroy_path"] = destroy_path
            __props__.__dict__["force_news"] = force_news
            __props__.__dict__["id_attribute"] = id_attribute
            __props__.__dict__["ignore_all_server_changes"] = ignore_all_server_changes
            __props__.__dict__["ignore_changes_tos"] = ignore_changes_tos
            __props__.__dict__["object_id"] = object_id
            if path is None and not opts.urn:
                raise TypeError("Missing required property 'path'")
            __props__.__dict__["path"] = path
            __props__.__dict__["query_string"] = query_string
            __props__.__dict__["read_data"] = read_data
            __props__.__dict__["read_method"] = read_method
            __props__.__dict__["read_path"] = read_path
            __props__.__dict__["read_search"] = read_search
            __props__.__dict__["restapi_object_id"] = restapi_object_id
            __props__.__dict__["update_data"] = update_data
            __props__.__dict__["update_method"] = update_method
            __props__.__dict__["update_path"] = update_path
            __props__.__dict__["api_data"] = None
            __props__.__dict__["api_response"] = None
            __props__.__dict__["create_response"] = None
        super(Object, __self__).__init__(
            'restapi:index/object:Object',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            api_data: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
            api_response: Optional[pulumi.Input[builtins.str]] = None,
            create_method: Optional[pulumi.Input[builtins.str]] = None,
            create_path: Optional[pulumi.Input[builtins.str]] = None,
            create_response: Optional[pulumi.Input[builtins.str]] = None,
            data: Optional[pulumi.Input[builtins.str]] = None,
            debug: Optional[pulumi.Input[builtins.bool]] = None,
            destroy_data: Optional[pulumi.Input[builtins.str]] = None,
            destroy_method: Optional[pulumi.Input[builtins.str]] = None,
            destroy_path: Optional[pulumi.Input[builtins.str]] = None,
            force_news: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            id_attribute: Optional[pulumi.Input[builtins.str]] = None,
            ignore_all_server_changes: Optional[pulumi.Input[builtins.bool]] = None,
            ignore_changes_tos: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            object_id: Optional[pulumi.Input[builtins.str]] = None,
            path: Optional[pulumi.Input[builtins.str]] = None,
            query_string: Optional[pulumi.Input[builtins.str]] = None,
            read_data: Optional[pulumi.Input[builtins.str]] = None,
            read_method: Optional[pulumi.Input[builtins.str]] = None,
            read_path: Optional[pulumi.Input[builtins.str]] = None,
            read_search: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
            restapi_object_id: Optional[pulumi.Input[builtins.str]] = None,
            update_data: Optional[pulumi.Input[builtins.str]] = None,
            update_method: Optional[pulumi.Input[builtins.str]] = None,
            update_path: Optional[pulumi.Input[builtins.str]] = None) -> 'Object':
        """
        Get an existing Object resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] api_response: The raw body of the HTTP response from the last read of the object.
        :param pulumi.Input[builtins.str] create_method: Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
               provider config documentation)
        :param pulumi.Input[builtins.str] create_response: The raw body of the HTTP response returned when creating the object.
        :param pulumi.Input[builtins.str] data: Valid JSON object that this provider will manage with the API server.
        :param pulumi.Input[builtins.bool] debug: Whether to emit verbose debug output while working with the API object on the server.
        :param pulumi.Input[builtins.str] destroy_data: Valid JSON object to pass during to destroy requests.
        :param pulumi.Input[builtins.str] destroy_method: Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
               provider config documentation)
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] force_news: Any changes to these values will result in recreating the resource instead of updating.
        :param pulumi.Input[builtins.str] id_attribute: Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
               provider config documentation)
        :param pulumi.Input[builtins.str] object_id: Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
               manually. This is used in conjunction with the `*_path` attributes.
        :param pulumi.Input[builtins.str] path: The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        :param pulumi.Input[builtins.str] query_string: Query string to be included in the path
        :param pulumi.Input[builtins.str] read_data: Valid JSON object to pass during read requests.
        :param pulumi.Input[builtins.str] read_method: Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
               config documentation)
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] read_search: Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
               `query_string` (see datasource config documentation)
        :param pulumi.Input[builtins.str] update_data: Valid JSON object to pass during to update requests.
        :param pulumi.Input[builtins.str] update_method: Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
               provider config documentation)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ObjectState.__new__(_ObjectState)

        __props__.__dict__["api_data"] = api_data
        __props__.__dict__["api_response"] = api_response
        __props__.__dict__["create_method"] = create_method
        __props__.__dict__["create_path"] = create_path
        __props__.__dict__["create_response"] = create_response
        __props__.__dict__["data"] = data
        __props__.__dict__["debug"] = debug
        __props__.__dict__["destroy_data"] = destroy_data
        __props__.__dict__["destroy_method"] = destroy_method
        __props__.__dict__["destroy_path"] = destroy_path
        __props__.__dict__["force_news"] = force_news
        __props__.__dict__["id_attribute"] = id_attribute
        __props__.__dict__["ignore_all_server_changes"] = ignore_all_server_changes
        __props__.__dict__["ignore_changes_tos"] = ignore_changes_tos
        __props__.__dict__["object_id"] = object_id
        __props__.__dict__["path"] = path
        __props__.__dict__["query_string"] = query_string
        __props__.__dict__["read_data"] = read_data
        __props__.__dict__["read_method"] = read_method
        __props__.__dict__["read_path"] = read_path
        __props__.__dict__["read_search"] = read_search
        __props__.__dict__["restapi_object_id"] = restapi_object_id
        __props__.__dict__["update_data"] = update_data
        __props__.__dict__["update_method"] = update_method
        __props__.__dict__["update_path"] = update_path
        return Object(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="apiData")
    def api_data(self) -> pulumi.Output[Mapping[str, builtins.str]]:
        return pulumi.get(self, "api_data")

    @property
    @pulumi.getter(name="apiResponse")
    def api_response(self) -> pulumi.Output[builtins.str]:
        """
        The raw body of the HTTP response from the last read of the object.
        """
        return pulumi.get(self, "api_response")

    @property
    @pulumi.getter(name="createMethod")
    def create_method(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method`
        provider config documentation)
        """
        return pulumi.get(self, "create_method")

    @property
    @pulumi.getter(name="createPath")
    def create_path(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "create_path")

    @property
    @pulumi.getter(name="createResponse")
    def create_response(self) -> pulumi.Output[builtins.str]:
        """
        The raw body of the HTTP response returned when creating the object.
        """
        return pulumi.get(self, "create_response")

    @property
    @pulumi.getter
    def data(self) -> pulumi.Output[builtins.str]:
        """
        Valid JSON object that this provider will manage with the API server.
        """
        return pulumi.get(self, "data")

    @property
    @pulumi.getter
    def debug(self) -> pulumi.Output[Optional[builtins.bool]]:
        """
        Whether to emit verbose debug output while working with the API object on the server.
        """
        return pulumi.get(self, "debug")

    @property
    @pulumi.getter(name="destroyData")
    def destroy_data(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Valid JSON object to pass during to destroy requests.
        """
        return pulumi.get(self, "destroy_data")

    @property
    @pulumi.getter(name="destroyMethod")
    def destroy_method(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method`
        provider config documentation)
        """
        return pulumi.get(self, "destroy_method")

    @property
    @pulumi.getter(name="destroyPath")
    def destroy_path(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "destroy_path")

    @property
    @pulumi.getter(name="forceNews")
    def force_news(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        """
        Any changes to these values will result in recreating the resource instead of updating.
        """
        return pulumi.get(self, "force_news")

    @property
    @pulumi.getter(name="idAttribute")
    def id_attribute(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute`
        provider config documentation)
        """
        return pulumi.get(self, "id_attribute")

    @property
    @pulumi.getter(name="ignoreAllServerChanges")
    def ignore_all_server_changes(self) -> pulumi.Output[Optional[builtins.bool]]:
        return pulumi.get(self, "ignore_all_server_changes")

    @property
    @pulumi.getter(name="ignoreChangesTos")
    def ignore_changes_tos(self) -> pulumi.Output[Optional[Sequence[builtins.str]]]:
        return pulumi.get(self, "ignore_changes_tos")

    @property
    @pulumi.getter(name="objectId")
    def object_id(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id
        manually. This is used in conjunction with the `*_path` attributes.
        """
        return pulumi.get(self, "object_id")

    @property
    @pulumi.getter
    def path(self) -> pulumi.Output[builtins.str]:
        """
        The API path on top of the base URL set in the provider that represents objects of this type on the API server.
        """
        return pulumi.get(self, "path")

    @property
    @pulumi.getter(name="queryString")
    def query_string(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Query string to be included in the path
        """
        return pulumi.get(self, "query_string")

    @property
    @pulumi.getter(name="readData")
    def read_data(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Valid JSON object to pass during read requests.
        """
        return pulumi.get(self, "read_data")

    @property
    @pulumi.getter(name="readMethod")
    def read_method(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider
        config documentation)
        """
        return pulumi.get(self, "read_method")

    @property
    @pulumi.getter(name="readPath")
    def read_path(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "read_path")

    @property
    @pulumi.getter(name="readSearch")
    def read_search(self) -> pulumi.Output[Optional[Mapping[str, builtins.str]]]:
        """
        Custom search for `read_path`. This map will take `search_data`, `search_key`, `search_value`, `results_key` and
        `query_string` (see datasource config documentation)
        """
        return pulumi.get(self, "read_search")

    @property
    @pulumi.getter(name="restapiObjectId")
    def restapi_object_id(self) -> pulumi.Output[builtins.str]:
        return pulumi.get(self, "restapi_object_id")

    @property
    @pulumi.getter(name="updateData")
    def update_data(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Valid JSON object to pass during to update requests.
        """
        return pulumi.get(self, "update_data")

    @property
    @pulumi.getter(name="updateMethod")
    def update_method(self) -> pulumi.Output[Optional[builtins.str]]:
        """
        Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method`
        provider config documentation)
        """
        return pulumi.get(self, "update_method")

    @property
    @pulumi.getter(name="updatePath")
    def update_path(self) -> pulumi.Output[Optional[builtins.str]]:
        return pulumi.get(self, "update_path")

