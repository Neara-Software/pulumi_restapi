# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'ProviderOauthClientCredentialsArgs',
    'ProviderOauthClientCredentialsArgsDict',
]

MYPY = False

if not MYPY:
    class ProviderOauthClientCredentialsArgsDict(TypedDict):
        oauth_client_id: pulumi.Input[builtins.str]
        """
        client id
        """
        oauth_client_secret: pulumi.Input[builtins.str]
        """
        client secret
        """
        oauth_token_endpoint: pulumi.Input[builtins.str]
        """
        oauth token endpoint
        """
        endpoint_params: NotRequired[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]
        """
        Additional key/values to pass to the underlying Oauth client library (as EndpointParams)
        """
        oauth_scopes: NotRequired[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]
        """
        scopes
        """
elif False:
    ProviderOauthClientCredentialsArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ProviderOauthClientCredentialsArgs:
    def __init__(__self__, *,
                 oauth_client_id: pulumi.Input[builtins.str],
                 oauth_client_secret: pulumi.Input[builtins.str],
                 oauth_token_endpoint: pulumi.Input[builtins.str],
                 endpoint_params: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]] = None,
                 oauth_scopes: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None):
        """
        :param pulumi.Input[builtins.str] oauth_client_id: client id
        :param pulumi.Input[builtins.str] oauth_client_secret: client secret
        :param pulumi.Input[builtins.str] oauth_token_endpoint: oauth token endpoint
        :param pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]] endpoint_params: Additional key/values to pass to the underlying Oauth client library (as EndpointParams)
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] oauth_scopes: scopes
        """
        pulumi.set(__self__, "oauth_client_id", oauth_client_id)
        pulumi.set(__self__, "oauth_client_secret", oauth_client_secret)
        pulumi.set(__self__, "oauth_token_endpoint", oauth_token_endpoint)
        if endpoint_params is not None:
            pulumi.set(__self__, "endpoint_params", endpoint_params)
        if oauth_scopes is not None:
            pulumi.set(__self__, "oauth_scopes", oauth_scopes)

    @property
    @pulumi.getter(name="oauthClientId")
    def oauth_client_id(self) -> pulumi.Input[builtins.str]:
        """
        client id
        """
        return pulumi.get(self, "oauth_client_id")

    @oauth_client_id.setter
    def oauth_client_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "oauth_client_id", value)

    @property
    @pulumi.getter(name="oauthClientSecret")
    def oauth_client_secret(self) -> pulumi.Input[builtins.str]:
        """
        client secret
        """
        return pulumi.get(self, "oauth_client_secret")

    @oauth_client_secret.setter
    def oauth_client_secret(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "oauth_client_secret", value)

    @property
    @pulumi.getter(name="oauthTokenEndpoint")
    def oauth_token_endpoint(self) -> pulumi.Input[builtins.str]:
        """
        oauth token endpoint
        """
        return pulumi.get(self, "oauth_token_endpoint")

    @oauth_token_endpoint.setter
    def oauth_token_endpoint(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "oauth_token_endpoint", value)

    @property
    @pulumi.getter(name="endpointParams")
    def endpoint_params(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]:
        """
        Additional key/values to pass to the underlying Oauth client library (as EndpointParams)
        """
        return pulumi.get(self, "endpoint_params")

    @endpoint_params.setter
    def endpoint_params(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "endpoint_params", value)

    @property
    @pulumi.getter(name="oauthScopes")
    def oauth_scopes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        scopes
        """
        return pulumi.get(self, "oauth_scopes")

    @oauth_scopes.setter
    def oauth_scopes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "oauth_scopes", value)


